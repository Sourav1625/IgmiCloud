<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks">
    <Style x:Key="LoginStackPanel" TargetType="StackPanel">
        <Setter Property="StackPanel.Background" Value="#f7f7f7" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="StackPanel.Background" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ForgotPasswordTextBlock" TargetType="TextBlock">
        <Setter Property="TextBlock.Foreground" Value="#7d7a7a"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextBlock.Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="InformationVariant" TargetType="iconPacks:PackIconMaterial">
        <Setter Property="iconPacks:PackIconMaterial.Foreground" Value="#7d7a7a"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="iconPacks:PackIconMaterial.Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FolderTree" TargetType="iconPacks:PackIconMaterial">
        <Setter Property="iconPacks:PackIconMaterial.Foreground" Value="#F8B84E"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="iconPacks:PackIconMaterial.Background" Value="#ffffff"/>
                <Setter Property="iconPacks:PackIconMaterial.Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="styleTreeViewExpandCollapse" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Image x:Name="image" Source="../Icons/Right.ico" HorizontalAlignment="Right" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="image" Property="Source" Value="../Icons/Down.ico" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="styleTreeView" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="#7d7a7a"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ContentPresenter Grid.Column="0" x:Name="PART_Header"
                                ContentSource="Header"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="25 0"/>
                        <ItemsPresenter x:Name="ItemsHost"
                              Grid.Row="1"
                              Grid.Column="0" Grid.ColumnSpan="2" Margin="20 0"/>
                        <ToggleButton  x:Name="Expander" HorizontalAlignment="Right" Grid.Column="2"
                                Style="{StaticResource styleTreeViewExpandCollapse}"
                                IsChecked="{Binding Path=IsExpanded,
                                    RelativeSource={RelativeSource TemplatedParent}}" 
                                ClickMode="Press"
                                Width="25" Height="25"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility"
                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" 
                    Value="Hidden"/>
                        </Trigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="true">
                <Setter  Property="Background" Value="#ffffff" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="true">
                <Setter  Property="Background" Value="#ffffff" />
            </Trigger>
            <Trigger Property="IsExpanded" Value="true">
                <Setter  Property="Background" Value="#ffffff" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <BooleanToVisibilityConverter x:Key="btv" />
    <ControlTemplate x:Key="VsMenuSub" TargetType="MenuItem">
        <DockPanel TextBlock.FontSize="14"  x:Name="panel" Cursor="Hand">
            <iconPacks:PackIconMaterial Kind="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" Width="16" Margin="15 6 2 5" Foreground="#646464"></iconPacks:PackIconMaterial>
            <Label Content="{TemplateBinding Header}" x:Name="nameContent" Foreground="#646464" Margin="0,1,35,4" />
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="panel" Value="#f5f5f5" />
                <Setter Property="Foreground" TargetName="nameContent" Value="#717379" />                
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="VsMenuSep" TargetType="Separator">
        <Border Height=".8" Background="#E0E0E0" />
    </ControlTemplate>
    <Style x:Key="menuItem" TargetType="{x:Type StackPanel}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#363636"/>
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>